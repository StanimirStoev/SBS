@model SBS.Core.Models.TransferViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Transfer</h4>
<hr />


<form asp-controller="Transfer" asp-action="Create" method="post">
    <div class="row">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-md-5">
            <div class="form-group">
                <label asp-for="FromStoreId" class="control-label"></label>
                <select asp-for="@Model.FromStore" class="form-control" asp-items="ViewBag.FromStoresList" onchange="FillDependentSelect(this, 'lstToStoresId')"></select>
                <span asp-validation-for="FromStoreId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ToStoreId" class="control-label"></label>
                <select id="lstToStoresId" asp-for="@Model.ToStore" class="form-control"></select>
                <span asp-validation-for="ToStoreId" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group col-2"></div>

        <div class="col-md-5">
            <div class="form-group">
                <label asp-for="CreateDatetime" class="control-label"></label>
                <input asp-for="CreateDatetime" class="form-control" />
                <span asp-validation-for="CreateDatetime" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="col-12 ml-5">
        <h5>Details</h5>
        <table id="addressTable" class="table table-borderless table-sm mb-0 pb-0">
            <thead>
                <tr>
                    <th>
                        Article
                    </th>
                    <th>
                        Partide
                    </th>
                    <th>
                        Quantity
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Details.Count; i++)
                {
                    <tr>
                        <td>
                            <select asp-for="@Model.Details[i].DeliveryDetail.Article.Name" class="form-control" asp-items="ViewBag.ArticlesList"></select>
                        </td>
                        <td>
                            <select asp-for="@Model.Details[i].DeliveryDetail.Id" class="form-control" asp-items="ViewBag.ArticlesList"></select>
                        </td>
                        <td>
                            <span asp-validation-for="@Model.Details[i].Qty" class="text-danger"></span>
                            @Html.EditorFor(m => m.Details[i].Qty, new{htmlAttributes = new{@class = "form-control"}})
                        </td>
                        <td>
                            <input asp-for="@Model.Details[i].IsActive" class="form-control visually-hidden invisible" size="5" type="text" id="IsActive--@i" />
                            <button id="addbtn--@i" type="button" class="btn btn-sm btn-secondary visible"
                                onclick="AddItm(this)">
                                Add
                            </button>
                            <button id="btnremove--@i" type="button" class="btn btn-sm btn-danger invisible"
                                onclick="DeleteItm(this)">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="form-group btn-group mt-2">
        <input type="submit" value="Create" class="btn btn-primary" />
        <a class="btn btn-secondary" asp-action="Index">Back</a>
    </div>
</form>





@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        function FillDependentSelect(masterSelectControl, dependentSelectControl) {

            var lstItems = $("#" + dependentSelectControl);
            lstItems.empty();
            lstItems.append($('<option/>',
                {
                    value: null,
                    text: "Select Item"
                }));

            var selectedItem = masterSelectControl.options[masterSelectControl.selectedIndex].value;

            if (selectedItem != null && selectedItem != '') {
                $.getJSON('@Url.Action("GetToStores")', { id: selectedItem }, function (items) {
                    if (items != null && !jQuery.isEmptyObject(items)) {
                        $.each(items, function (index, item) {
                            lstItems.append($('<option/>',
                                {
                                    value: item.value,
                                    text: item.text
                                }));
                        });
                    };
                });
            }

            return;
        }
    </script>
}
