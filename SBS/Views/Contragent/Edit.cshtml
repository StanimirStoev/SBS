@model SBS.Core.Models.ContragentViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Contragent</h4>
<hr />

<form asp-controller="Contragent" asp-action="Edit" method="post">

    <div class="row">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-5">
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group col-2"></div>

        <div class="col-5">
            <div class="form-group">
                <label asp-for="VatNumber" class="control-label"></label>
                <input asp-for="VatNumber" class="form-control" />
                <span asp-validation-for="VatNumber" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsClient" /> @Html.DisplayNameFor(model => model.IsClient)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsSupplier" /> @Html.DisplayNameFor(model => model.IsSupplier)
                </label>
            </div>
        </div>
    </div>

    <div class="col-12 ml-5">
        <h5>Addresses</h5>
        <table id="addressTable" class="table table-borderless table-sm mb-0 pb-0">
            <thead>
                <tr>
                    <th>
                        Country Name
                    </th>
                    <th>
                        City Name
                    </th>
                    <th>
                        Address Line 1
                    </th>
                    <th>
                        Address Line 2
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Addresses.Count; i++)
                {
                    <tr>
                        <td>
                            <select id="selCountry--@i" asp-for="@Model.Addresses[i].CountryId" class="form-control" asp-items="ViewBag.CountriesList" onchange="FillDependentSelect(this, 'selCity--@i')"></select>
                        </td>
                        <td>
                            <select id="selCity--@i" asp-for="@Model.Addresses[i].CityId" class="form-control" asp-items="@Model.Addresses[i].Country.GetCitiesSelectListItems()"></select>
                        </td>
                        <td>
                            <span asp-validation-for="@Model.Addresses[i].AddressLine1" class="text-danger"></span>
                            @Html.EditorFor(m => m.Addresses[i].AddressLine1, new{htmlAttributes = new{@class = "form-control"}})
                        </td>
                        <td>
                            <span asp-validation-for="@Model.Addresses[i].AddressLine2" class="text-danger"></span>
                            @Html.EditorFor(m => m.Addresses[i].AddressLine2, new{htmlAttributes = new{@class = "form-control"}})
                            <input asp-for="@Model.Addresses[i].Id" id="addressId--@i" class="form-control visually-hidden invisible" type="text" />
                        </td>
                        <td>
                            @*<button id="dummybtn--@i" type="button" class="btn btn-sm btn-secondary invisible">Dummy</button>*@
                            <input asp-for="@Model.Addresses[i].IsActive" class="form-control visually-hidden invisible" size="5" type="text" id="IsActive--@i" />
                            <button id="addbtn--@i" type="button" class="btn btn-sm btn-secondary @((i < Model.Addresses.Count -1) ? "invisible":"visible")"
                                onclick="AddItm(this)">
                                Add
                            </button>
                            <button id="btnremove--@i" type="button" class="btn btn-sm btn-danger @((i < Model.Addresses.Count -1) ? "visible":"invisible") "
                                onclick="DeleteItm(this)">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <input type="hidden" id="hdnLastIndex" value="0" />
    <div class="form-group btn-group mt-2">
        <input type="submit" value="Save" class="btn btn-primary" />
        <a class="btn btn-secondary" asp-action="Index">Back</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

        function AddItm(btn) {
            var table;
            table = document.getElementById('addressTable');

            var rows = table.getElementsByTagName('tr');
            var rowOuterHtml = rows[rows.length - 1].outerHTML;

            //var lastRowIdx = document.getElementById('hdnLastIndex').value;
            var lastRowIdx = btn.id.replaceAll('addbtn--', '');

            var nextRoIdx = eval(lastRowIdx) + 1;

            document.getElementById('hdnLastIndex').value = nextRoIdx;

            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastRowIdx + '_', '_' + nextRoIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastRowIdx + ']', '[' + nextRoIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('--' + lastRowIdx, '--' + nextRoIdx);

            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;

            var btnAddId = btn.id;
            var btnDeleteId = btnAddId.replaceAll('addbtn', 'btnremove');

            var delbtn = document.getElementById(btnDeleteId);
            delbtn.classList.add("visible");
            delbtn.classList.remove("invisible");

            var addbtn = document.getElementById(btnAddId);
            addbtn.classList.add("invisible");
            addbtn.classList.remove("visible");

            var x = document.getElementsByTagName("INPUT");
            for(var cnt = 0; cnt < x.length; cnt++){
                if (x[cnt].id == "addressId--" + nextRoIdx){
                    window.alert(x[cnt].id + '' + x[cnt].value);
                    x[cnt].value = '00000000-0000-0000-0000-000000000000';
                }
                //if (x[cnt].id.indexOf('_' + nextRoIdx + '_') > 0){
                    
                //    if (x[cnt].type == "text"){
                //        window.alert(x[cnt].id);
                //        x[cnt].value = '';
                //    }
                //    if (x[cnt].type == "number") {
                //        x[cnt].value = 0;
                //    }
                //}
            }
        }

        function DeleteItm(btn) {

            //$(btn).closest('tr').remove();
            var btnIdx = btn.id.replaceAll('btnremove--', '');
            var idIsActive = "IsActive--" + btnIdx;
            var idIsActive = document.querySelector("[id='" + idIsActive + "']");
            idIsActive.value = false;

            $(btn).closest('tr').hide();
        }

        function FillDependentSelect(masterSelectControl, dependentSelectControl) {

            var lstItems = $("#" + dependentSelectControl);
            lstItems.empty();
            lstItems.append($('<option/>',
                {
                    value: null,
                    text: "Select Item"
                }));

            var selectedItem = masterSelectControl.options[masterSelectControl.selectedIndex].value;

            if (selectedItem != null && selectedItem != '') {
                $.getJSON('@Url.Action("GetCities")', { id: selectedItem }, function (items) {
                    if (items != null && !jQuery.isEmptyObject(items)) {
                        $.each(items, function (index, item) {
                            lstItems.append($('<option/>',
                                {
                                    value: item.value,
                                    text: item.text
                                }));
                        });
                    };
                });
            }

            return;
        }
    </script>
}
